{
  "name": "07-Perplexity-Synthesis",
  "nodes": [
    {
      "parameters": {},
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhookTrigger",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "perplexity-synthesis-07"
    },
    {
      "parameters": {
        "jsCode": "// ATT System - Perplexity Synthesis Agent #07 - PRODUCTION\n// Real Perplexity Sonar cultural insights synthesis\n\nconst { trackCost } = require('../../shared/cost-tracker');\nconst { isDuplicateTopic } = require('../../shared/utils');\nconst { errorHandler } = require('../../shared/error-handler');\nconst { PerplexityClient } = require('../../clients/perplexity-client');\n\nasync function synthesizeCulturalInsights(niche, competitorData) {\n  const perplexityApiKey = process.env.PERPLEXITY_API_KEY;\n  \n  if (!perplexityApiKey) {\n    throw new Error('PERPLEXITY_API_KEY environment variable not set');\n  }\n  \n  const client = new PerplexityClient(perplexityApiKey);\n  \n  console.log(`🌍 Real cultural analysis for: ${niche}`);\n  \n  // Get cultural insights from Perplexity Sonar\n  const insightsResult = await client.getCulturalInsights(niche, {\n    region: 'US',\n    timeframe: '30d',\n    depth: 'comprehensive',\n    includeComparisons: true\n  });\n  \n  if (!insightsResult.success) {\n    throw new Error(`Perplexity cultural insights failed: ${insightsResult.error}`);\n  }\n  \n  // Extract competitor keywords for trend analysis\n  const competitorKeywords = [];\n  if (competitorData.serp_data?.top_competitors) {\n    competitorData.serp_data.top_competitors.forEach(comp => {\n      if (comp.title) {\n        // Extract keywords from competitor titles\n        const titleWords = comp.title.toLowerCase()\n          .replace(/[^a-zA-Z0-9\\s]/g, '')\n          .split(' ')\n          .filter(word => word.length > 3 && !['shirt', 'tshirt', 'design', 'funny', 'cool'].includes(word));\n        competitorKeywords.push(...titleWords.slice(0, 3));\n      }\n    });\n  }\n  \n  // Get trending analysis for competitor keywords\n  let trendData = null;\n  if (competitorKeywords.length > 0) {\n    const uniqueKeywords = [...new Set(competitorKeywords)].slice(0, 5);\n    const trendResult = await client.getTrendAnalysis(uniqueKeywords, {\n      timeframe: '7d',\n      platforms: ['twitter', 'reddit', 'tiktok']\n    });\n    \n    if (trendResult.success) {\n      trendData = trendResult.trends;\n    }\n  }\n  \n  // Process and structure the real insights\n  const insights = insightsResult.insights;\n  \n  const culturalSynthesis = {\n    niche,\n    cultural_context: {\n      target_demographics: extractDemographics(insights.demographics || ''),\n      values_alignment: extractValues(insights.keyTakeaways || []),\n      current_trends: extractTrends(insights.trends || '', trendData?.emergingThemes || []),\n      pain_points: extractPainPoints(insights.opportunities || '')\n    },\n    market_sentiment: {\n      overall_mood: calculateSentiment(insights.keyTakeaways || []),\n      trending_themes: trendData?.emergingThemes?.slice(0, 3) || ['authentic expression', 'community connection'],\n      seasonal_factors: extractSeasonality(insights.seasonality || ''),\n      competitive_landscape: assessCompetitionLevel(competitorData)\n    },\n    actionable_insights: insights.recommendations || [\n      'Focus on authentic emotional messaging that resonates with core values',\n      'Leverage current cultural moments and trending topics',\n      'Emphasize quality and uniqueness over mass appeal'\n    ],\n    design_recommendations: {\n      style_direction: extractStyleDirection(insights.designInsights || ''),\n      messaging_tone: extractMessagingTone(insights.designInsights || ''),\n      color_palette: extractColorPalette(insights.designInsights || ''),\n      typography: extractTypography(insights.designInsights || ''),\n      cultural_hooks: extractCulturalHooks(insights.keyTakeaways || [], niche)\n    },\n    trend_velocity: trendData?.trendVelocity || 0,\n    social_mentions: trendData?.viralContent?.length || 0,\n    confidence_score: insights.culturalScore || 75,\n    synthesis_timestamp: new Date().toISOString(),\n    perplexity_metadata: insightsResult.metadata,\n    trend_metadata: trendData ? { keywords: competitorKeywords.slice(0, 5) } : null\n  };\n  \n  return culturalSynthesis;\n}\n\nfunction extractDemographics(demographicsText) {\n  const demo = {\n    primary_age: '25-45',\n    secondary_age: '18-34',\n    gender_split: 'fairly_even',\n    income_level: 'middle_to_upper_middle'\n  };\n  \n  if (demographicsText) {\n    // Extract age ranges\n    const ageMatch = demographicsText.match(/(\\d{2})-(\\d{2})/g);\n    if (ageMatch && ageMatch[0]) demo.primary_age = ageMatch[0];\n    \n    // Extract income indicators\n    if (demographicsText.includes('high income') || demographicsText.includes('affluent')) {\n      demo.income_level = 'upper_middle_to_high';\n    } else if (demographicsText.includes('budget') || demographicsText.includes('lower income')) {\n      demo.income_level = 'lower_middle';\n    }\n  }\n  \n  return demo;\n}\n\nfunction extractValues(takeaways) {\n  const commonValues = ['authenticity', 'self-expression', 'quality', 'community', 'humor', 'creativity', 'uniqueness'];\n  const foundValues = [];\n  \n  takeaways.forEach(takeaway => {\n    const lowerTakeaway = takeaway.toLowerCase();\n    commonValues.forEach(value => {\n      if (lowerTakeaway.includes(value) && !foundValues.includes(value)) {\n        foundValues.push(value);\n      }\n    });\n  });\n  \n  return foundValues.length > 0 ? foundValues : ['Self-expression', 'Authenticity', 'Quality consciousness'];\n}\n\nfunction extractTrends(trendsText, emergingThemes) {\n  const trends = [];\n  \n  // Extract from Perplexity insights\n  if (trendsText) {\n    const trendWords = ['minimalist', 'bold', 'vintage', 'sustainable', 'personalized', 'nostalgic'];\n    trendWords.forEach(trend => {\n      if (trendsText.toLowerCase().includes(trend)) {\n        trends.push(`${trend} aesthetic`);\n      }\n    });\n  }\n  \n  // Add emerging themes from trend analysis\n  emergingThemes.forEach(theme => {\n    if (!trends.some(t => t.toLowerCase().includes(theme.toLowerCase()))) {\n      trends.push(theme);\n    }\n  });\n  \n  return trends.length > 0 ? trends.slice(0, 5) : ['Minimalist aesthetic', 'Bold statement pieces', 'Authentic messaging'];\n}\n\nfunction extractPainPoints(opportunitiesText) {\n  const painPoints = [];\n  \n  if (opportunitiesText) {\n    if (opportunitiesText.includes('generic') || opportunitiesText.includes('basic')) {\n      painPoints.push('Generic mass-market designs');\n    }\n    if (opportunitiesText.includes('quality') || opportunitiesText.includes('cheap')) {\n      painPoints.push('Poor quality prints');\n    }\n    if (opportunitiesText.includes('size') || opportunitiesText.includes('fit')) {\n      painPoints.push('Limited size options');\n    }\n    if (opportunitiesText.includes('price') || opportunitiesText.includes('expensive')) {\n      painPoints.push('Overpriced basic designs');\n    }\n  }\n  \n  return painPoints.length > 0 ? painPoints : ['Generic mass-market designs', 'Poor quality prints', 'Lack of authentic messaging'];\n}\n\nfunction calculateSentiment(takeaways) {\n  const positiveWords = ['positive', 'good', 'great', 'excellent', 'amazing', 'love', 'best'];\n  const negativeWords = ['negative', 'bad', 'poor', 'worst', 'hate', 'terrible'];\n  \n  let positiveCount = 0;\n  let negativeCount = 0;\n  \n  takeaways.forEach(takeaway => {\n    const lowerTakeaway = takeaway.toLowerCase();\n    positiveWords.forEach(word => {\n      if (lowerTakeaway.includes(word)) positiveCount++;\n    });\n    negativeWords.forEach(word => {\n      if (lowerTakeaway.includes(word)) negativeCount++;\n    });\n  });\n  \n  if (positiveCount > negativeCount) return 'positive';\n  if (negativeCount > positiveCount) return 'negative';\n  return 'neutral';\n}\n\nfunction extractSeasonality(seasonalityText) {\n  const factors = [];\n  \n  if (seasonalityText) {\n    if (seasonalityText.includes('holiday') || seasonalityText.includes('christmas')) {\n      factors.push('Holiday gift-giving season');\n    }\n    if (seasonalityText.includes('summer') || seasonalityText.includes('vacation')) {\n      factors.push('Summer vacation energy');\n    }\n    if (seasonalityText.includes('back to school') || seasonalityText.includes('september')) {\n      factors.push('Back-to-school season');\n    }\n  }\n  \n  return factors.length > 0 ? factors : ['Social media influence peaks', 'Seasonal trend cycles'];\n}\n\nfunction assessCompetitionLevel(competitorData) {\n  const competitorCount = competitorData.serp_data?.top_competitors?.length || 0;\n  const avgReviews = competitorData.aggregate_insights?.average_reviews || 0;\n  \n  if (competitorCount >= 5 && avgReviews > 1000) return 'highly_saturated';\n  if (competitorCount >= 3 && avgReviews > 500) return 'moderately_saturated';\n  return 'emerging_market';\n}\n\nfunction extractStyleDirection(designInsights) {\n  if (!designInsights) return 'clean_minimalist_with_personality';\n  \n  const insights = designInsights.toLowerCase();\n  if (insights.includes('minimalist') || insights.includes('clean')) return 'clean_minimalist_with_personality';\n  if (insights.includes('bold') || insights.includes('statement')) return 'bold_statement_design';\n  if (insights.includes('vintage') || insights.includes('retro')) return 'vintage_inspired_aesthetic';\n  \n  return 'clean_minimalist_with_personality';\n}\n\nfunction extractMessagingTone(designInsights) {\n  if (!designInsights) return 'authentic_relatable_slightly_humorous';\n  \n  const insights = designInsights.toLowerCase();\n  if (insights.includes('humor') || insights.includes('funny')) return 'humorous_and_engaging';\n  if (insights.includes('serious') || insights.includes('professional')) return 'professional_and_trustworthy';\n  if (insights.includes('inspirational') || insights.includes('motivational')) return 'inspirational_and_uplifting';\n  \n  return 'authentic_relatable_slightly_humorous';\n}\n\nfunction extractColorPalette(designInsights) {\n  const palette = ['black', 'white'];\n  \n  if (designInsights) {\n    const insights = designInsights.toLowerCase();\n    if (insights.includes('earth') || insights.includes('natural')) palette.push('earth_tones');\n    if (insights.includes('bright') || insights.includes('vibrant')) palette.push('accent_colors');\n    if (insights.includes('pastel') || insights.includes('soft')) palette.push('pastel_accents');\n  }\n  \n  return palette;\n}\n\nfunction extractTypography(designInsights) {\n  if (!designInsights) return 'clean_modern_readable';\n  \n  const insights = designInsights.toLowerCase();\n  if (insights.includes('bold') || insights.includes('strong')) return 'bold_impactful_typography';\n  if (insights.includes('script') || insights.includes('handwritten')) return 'script_and_handlettered';\n  \n  return 'clean_modern_readable';\n}\n\nfunction extractCulturalHooks(takeaways, niche) {\n  const hooks = [`${niche} community insider references`];\n  \n  takeaways.forEach(takeaway => {\n    if (takeaway.includes('trend') || takeaway.includes('moment')) {\n      hooks.push('Trending cultural moments');\n    }\n    if (takeaway.includes('lifestyle') || takeaway.includes('authentic')) {\n      hooks.push('Authentic lifestyle messaging');\n    }\n  });\n  \n  return [...new Set(hooks)];\n}\n\nasync function main() {\n  const inputData = $input.first().json;\n  const niche = inputData.niche;\n  \n  console.log(`🌍 Real cultural synthesis for: ${niche}`);\n  \n  try {\n    // Track real Perplexity Sonar API cost\n    await trackCost('perplexity_synthesis', 0.001, `Agent #07 - Real cultural synthesis for ${niche}`);\n    \n    const culturalInsights = await synthesizeCulturalInsights(niche, inputData);\n    \n    const result = {\n      niche,\n      cultural_insights: culturalInsights,\n      insight_categories: {\n        demographic_insights: culturalInsights.cultural_context.target_demographics,\n        trend_analysis: culturalInsights.cultural_context.current_trends,\n        opportunity_gaps: culturalInsights.cultural_context.pain_points,\n        design_direction: culturalInsights.design_recommendations\n      },\n      strategic_summary: {\n        market_readiness: culturalInsights.confidence_score > 85 ? 'high' : culturalInsights.confidence_score > 70 ? 'medium' : 'low',\n        primary_opportunity: culturalInsights.actionable_insights[0],\n        design_style: culturalInsights.design_recommendations.style_direction,\n        messaging_approach: culturalInsights.design_recommendations.messaging_tone,\n        trend_velocity: culturalInsights.trend_velocity,\n        social_buzz: culturalInsights.social_mentions > 0 ? 'active' : 'quiet'\n      },\n      agent_source: 'perplexity-synthesis-07',\n      processed_at: new Date().toISOString(),\n      real_api: true\n    };\n    \n    console.log(`✅ Real cultural synthesis complete (confidence: ${culturalInsights.confidence_score}%)`);\n    console.log(`🎯 Market readiness: ${result.strategic_summary.market_readiness}`);\n    console.log(`📈 Trend velocity: ${culturalInsights.trend_velocity}`);\n    console.log(`💬 Social mentions: ${culturalInsights.social_mentions}`);\n    \n    // Success heartbeat\n    await trackCost('system_health', 0.001, 'Agent #07 - Success heartbeat');\n    \n    return [{ json: result }];\n    \n  } catch (error) {\n    console.error('❌ Real Perplexity Synthesis error:', error);\n    await errorHandler('perplexity-synthesis-07', error, { niche });\n    throw error;\n  }\n}\n\nreturn await main();"
      },
      "id": "perplexity-synthesis-code",
      "name": "Perplexity Cultural Analysis",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [440, 300]
    },
    {
      "parameters": {
        "operation": "update",
        "base": {
          "__rl": true,
          "value": "{{ $env.NOTION_DATABASE_ID }}",
          "mode": "id"
        },
        "pageId": "={{ $json.niche }}",
        "properties": {
          "Cultural Insights": {
            "type": "text",
            "text": [{ "type": "text", "text": "={{ JSON.stringify($json.cultural_insights) }}" }]
          },
          "Market Readiness": {
            "type": "select",
            "select": { "name": "={{ $json.strategic_summary.market_readiness }}" }
          },
          "Design Style": {
            "type": "text",
            "text": [{ "type": "text", "text": "={{ $json.strategic_summary.design_style }}" }]
          },
          "Messaging Approach": {
            "type": "text",
            "text": [{ "type": "text", "text": "={{ $json.strategic_summary.messaging_approach }}" }]
          },
          "Confidence Score": {
            "type": "number",
            "number": "={{ $json.cultural_insights.confidence_score }}"
          }
        }
      },
      "id": "update-cultural-insights",
      "name": "Update Cultural Insights",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2,
      "position": [640, 300],
      "retryOnFail": true
    }
  ],
  "connections": {
    "Webhook Trigger": { "main": [[ { "node": "Perplexity Cultural Analysis", "type": "main", "index": 0 } ]] },
    "Perplexity Cultural Analysis": { "main": [[ { "node": "Update Cultural Insights", "type": "main", "index": 0 } ]] }
  },
  "settings": { "executionOrder": "v1" },
  "tags": [{ "id": "agent-07", "name": "perplexity-synthesis" }],
  "versionId": "v1.0-week4"
}